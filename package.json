{
  "name": "socket_ship",
  "version": "0.0.0",
  "description": "Multiplayer game using web sockets to fight with space ships",
  "main": "./server.js",
  "repository": {
    "type": "git",
    "url": "git@github.com/PhilT/socket_ship.git"
  },
  "author": "Phil Thpmpson",
  "license": "BSD-2-Clause",
  "dependencies": {
    "ws": "*"
  },
  "devDependencies": {
    "browserify": "*",
    "browser-launcher": "*",
    "eslint": "*",
    "eslint-config-airbnb": "*",
    "minifake": "*",
    "nodemon": "*",
    "tap-dot": "*",
    "tape": "*",
    "tape-catch": "*",
    "tape-run": "*",
    "uglify-js": "*"
  },
  "scripts": {
    "start": "node server.js",

    "clean": "tput reset && rm -rf tmp public && mkdir -p tmp public",
    "prebuild": "npm run clean",

    "build": "npm run build:lib && npm run build:css && npm run build:js && npm run build:html",
    "build:lib": "cp -ru lib/* public/",
    "build:html": "node slm.js views public",
    "build:css": "stylus -p -c styles/main.styl > public/bundle.css",
    "build:js": "browserify -t babelify -t brfs -e js/main.js -o public/bundle.js",
    "prebuild:js:minify": "npm run build:js",
    "build:js:minify": "cat public/bundle.js | uglifyjs -mc > public/bundle.js",

    "lint": "eslint js/**/*.js tests/**/*.js &",
    "pretest": "npm run lint",
    "test": "tape tests/units/**/*_test.js | tap-dot",
    "features:run": "browserify -d -t babelify -t brfs tests/features/*_test.js | tape-run",
    "features:browser": "npm run features:run -- --browser chrome",
    "features": "npm run features:run -- --browser phantom",

    "prewatch": "npm run clean",
    "watch": "npm run watch:lib & npm run watch:css & npm run watch:html & npm run watch:js & npm run watch:test",
    "watch:lib": "nodemon -w lib -e js,css,map,ttf,woff,woff2 -x 'npm run build:lib'",
    "watch:css": "nodemon -w styles -e styl -x 'npm run debug:css'",
    "watch:html": "nodemon -w views -e slm -x 'npm run build:html'",
    "watch:js": "nodemon -w tests -w js -e js -x 'npm run debug:js'",
    "watch:test": "nodemon -w tests -w js -e js -x 'npm test'",
    "watch:start": "nodemon --debug",

    "debug:css": "npm run build:css -- --sourcemap-inline --line-numbers",
    "debug:js": "npm run build:js -- --debug"
  }
}
